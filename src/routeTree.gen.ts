/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserProfilePageImport } from './routes/user-profile-page'
import { Route as UserManagementImport } from './routes/user-management'
import { Route as UserDashboardImport } from './routes/user-dashboard'
import { Route as StatisticsImport } from './routes/statistics'
import { Route as RestorePasswordStep1Import } from './routes/restore-password-step1'
import { Route as RegisterFormImport } from './routes/register-form'
import { Route as ProtectedImport } from './routes/protected'
import { Route as PropertyManagementImport } from './routes/property-management'
import { Route as PromptEditingImport } from './routes/prompt-editing'
import { Route as LoginFormImport } from './routes/login-form'
import { Route as ListingsImport } from './routes/listings'
import { Route as ListingPageImport } from './routes/listing-page'
import { Route as ListingFormToAddPageImport } from './routes/listing-form-to-add-page'
import { Route as CompleteSubscriptionImport } from './routes/complete-subscription'
import { Route as CompletePaymentImport } from './routes/complete-payment'
import { Route as CancelSubscriptionImport } from './routes/cancel-subscription'
import { Route as CancelPaymentImport } from './routes/cancel-payment'
import { Route as IndexImport } from './routes/index'
import { Route as VerifyEmailEmailTokenImport } from './routes/verify-email/$email-token'
import { Route as PasswordResetEmailTokenImport } from './routes/password-reset/$email-token'
import { Route as ConfirmChangeTokenTypeImport } from './routes/confirm-change/$token.$type'

// Create/Update Routes

const UserProfilePageRoute = UserProfilePageImport.update({
  id: '/user-profile-page',
  path: '/user-profile-page',
  getParentRoute: () => rootRoute,
} as any)

const UserManagementRoute = UserManagementImport.update({
  id: '/user-management',
  path: '/user-management',
  getParentRoute: () => rootRoute,
} as any)

const UserDashboardRoute = UserDashboardImport.update({
  id: '/user-dashboard',
  path: '/user-dashboard',
  getParentRoute: () => rootRoute,
} as any)

const StatisticsRoute = StatisticsImport.update({
  id: '/statistics',
  path: '/statistics',
  getParentRoute: () => rootRoute,
} as any)

const RestorePasswordStep1Route = RestorePasswordStep1Import.update({
  id: '/restore-password-step1',
  path: '/restore-password-step1',
  getParentRoute: () => rootRoute,
} as any)

const RegisterFormRoute = RegisterFormImport.update({
  id: '/register-form',
  path: '/register-form',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/protected',
  path: '/protected',
  getParentRoute: () => rootRoute,
} as any)

const PropertyManagementRoute = PropertyManagementImport.update({
  id: '/property-management',
  path: '/property-management',
  getParentRoute: () => rootRoute,
} as any)

const PromptEditingRoute = PromptEditingImport.update({
  id: '/prompt-editing',
  path: '/prompt-editing',
  getParentRoute: () => rootRoute,
} as any)

const LoginFormRoute = LoginFormImport.update({
  id: '/login-form',
  path: '/login-form',
  getParentRoute: () => rootRoute,
} as any)

const ListingsRoute = ListingsImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => rootRoute,
} as any)

const ListingPageRoute = ListingPageImport.update({
  id: '/listing-page',
  path: '/listing-page',
  getParentRoute: () => rootRoute,
} as any)

const ListingFormToAddPageRoute = ListingFormToAddPageImport.update({
  id: '/listing-form-to-add-page',
  path: '/listing-form-to-add-page',
  getParentRoute: () => rootRoute,
} as any)

const CompleteSubscriptionRoute = CompleteSubscriptionImport.update({
  id: '/complete-subscription',
  path: '/complete-subscription',
  getParentRoute: () => rootRoute,
} as any)

const CompletePaymentRoute = CompletePaymentImport.update({
  id: '/complete-payment',
  path: '/complete-payment',
  getParentRoute: () => rootRoute,
} as any)

const CancelSubscriptionRoute = CancelSubscriptionImport.update({
  id: '/cancel-subscription',
  path: '/cancel-subscription',
  getParentRoute: () => rootRoute,
} as any)

const CancelPaymentRoute = CancelPaymentImport.update({
  id: '/cancel-payment',
  path: '/cancel-payment',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyEmailEmailTokenRoute = VerifyEmailEmailTokenImport.update({
  id: '/verify-email/$email-token',
  path: '/verify-email/$email-token',
  getParentRoute: () => rootRoute,
} as any)

const PasswordResetEmailTokenRoute = PasswordResetEmailTokenImport.update({
  id: '/password-reset/$email-token',
  path: '/password-reset/$email-token',
  getParentRoute: () => rootRoute,
} as any)

const ConfirmChangeTokenTypeRoute = ConfirmChangeTokenTypeImport.update({
  id: '/confirm-change/$token/$type',
  path: '/confirm-change/$token/$type',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cancel-payment': {
      id: '/cancel-payment'
      path: '/cancel-payment'
      fullPath: '/cancel-payment'
      preLoaderRoute: typeof CancelPaymentImport
      parentRoute: typeof rootRoute
    }
    '/cancel-subscription': {
      id: '/cancel-subscription'
      path: '/cancel-subscription'
      fullPath: '/cancel-subscription'
      preLoaderRoute: typeof CancelSubscriptionImport
      parentRoute: typeof rootRoute
    }
    '/complete-payment': {
      id: '/complete-payment'
      path: '/complete-payment'
      fullPath: '/complete-payment'
      preLoaderRoute: typeof CompletePaymentImport
      parentRoute: typeof rootRoute
    }
    '/complete-subscription': {
      id: '/complete-subscription'
      path: '/complete-subscription'
      fullPath: '/complete-subscription'
      preLoaderRoute: typeof CompleteSubscriptionImport
      parentRoute: typeof rootRoute
    }
    '/listing-form-to-add-page': {
      id: '/listing-form-to-add-page'
      path: '/listing-form-to-add-page'
      fullPath: '/listing-form-to-add-page'
      preLoaderRoute: typeof ListingFormToAddPageImport
      parentRoute: typeof rootRoute
    }
    '/listing-page': {
      id: '/listing-page'
      path: '/listing-page'
      fullPath: '/listing-page'
      preLoaderRoute: typeof ListingPageImport
      parentRoute: typeof rootRoute
    }
    '/listings': {
      id: '/listings'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsImport
      parentRoute: typeof rootRoute
    }
    '/login-form': {
      id: '/login-form'
      path: '/login-form'
      fullPath: '/login-form'
      preLoaderRoute: typeof LoginFormImport
      parentRoute: typeof rootRoute
    }
    '/prompt-editing': {
      id: '/prompt-editing'
      path: '/prompt-editing'
      fullPath: '/prompt-editing'
      preLoaderRoute: typeof PromptEditingImport
      parentRoute: typeof rootRoute
    }
    '/property-management': {
      id: '/property-management'
      path: '/property-management'
      fullPath: '/property-management'
      preLoaderRoute: typeof PropertyManagementImport
      parentRoute: typeof rootRoute
    }
    '/protected': {
      id: '/protected'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/register-form': {
      id: '/register-form'
      path: '/register-form'
      fullPath: '/register-form'
      preLoaderRoute: typeof RegisterFormImport
      parentRoute: typeof rootRoute
    }
    '/restore-password-step1': {
      id: '/restore-password-step1'
      path: '/restore-password-step1'
      fullPath: '/restore-password-step1'
      preLoaderRoute: typeof RestorePasswordStep1Import
      parentRoute: typeof rootRoute
    }
    '/statistics': {
      id: '/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsImport
      parentRoute: typeof rootRoute
    }
    '/user-dashboard': {
      id: '/user-dashboard'
      path: '/user-dashboard'
      fullPath: '/user-dashboard'
      preLoaderRoute: typeof UserDashboardImport
      parentRoute: typeof rootRoute
    }
    '/user-management': {
      id: '/user-management'
      path: '/user-management'
      fullPath: '/user-management'
      preLoaderRoute: typeof UserManagementImport
      parentRoute: typeof rootRoute
    }
    '/user-profile-page': {
      id: '/user-profile-page'
      path: '/user-profile-page'
      fullPath: '/user-profile-page'
      preLoaderRoute: typeof UserProfilePageImport
      parentRoute: typeof rootRoute
    }
    '/password-reset/$email-token': {
      id: '/password-reset/$email-token'
      path: '/password-reset/$email-token'
      fullPath: '/password-reset/$email-token'
      preLoaderRoute: typeof PasswordResetEmailTokenImport
      parentRoute: typeof rootRoute
    }
    '/verify-email/$email-token': {
      id: '/verify-email/$email-token'
      path: '/verify-email/$email-token'
      fullPath: '/verify-email/$email-token'
      preLoaderRoute: typeof VerifyEmailEmailTokenImport
      parentRoute: typeof rootRoute
    }
    '/confirm-change/$token/$type': {
      id: '/confirm-change/$token/$type'
      path: '/confirm-change/$token/$type'
      fullPath: '/confirm-change/$token/$type'
      preLoaderRoute: typeof ConfirmChangeTokenTypeImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cancel-payment': typeof CancelPaymentRoute
  '/cancel-subscription': typeof CancelSubscriptionRoute
  '/complete-payment': typeof CompletePaymentRoute
  '/complete-subscription': typeof CompleteSubscriptionRoute
  '/listing-form-to-add-page': typeof ListingFormToAddPageRoute
  '/listing-page': typeof ListingPageRoute
  '/listings': typeof ListingsRoute
  '/login-form': typeof LoginFormRoute
  '/prompt-editing': typeof PromptEditingRoute
  '/property-management': typeof PropertyManagementRoute
  '/protected': typeof ProtectedRoute
  '/register-form': typeof RegisterFormRoute
  '/restore-password-step1': typeof RestorePasswordStep1Route
  '/statistics': typeof StatisticsRoute
  '/user-dashboard': typeof UserDashboardRoute
  '/user-management': typeof UserManagementRoute
  '/user-profile-page': typeof UserProfilePageRoute
  '/password-reset/$email-token': typeof PasswordResetEmailTokenRoute
  '/verify-email/$email-token': typeof VerifyEmailEmailTokenRoute
  '/confirm-change/$token/$type': typeof ConfirmChangeTokenTypeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cancel-payment': typeof CancelPaymentRoute
  '/cancel-subscription': typeof CancelSubscriptionRoute
  '/complete-payment': typeof CompletePaymentRoute
  '/complete-subscription': typeof CompleteSubscriptionRoute
  '/listing-form-to-add-page': typeof ListingFormToAddPageRoute
  '/listing-page': typeof ListingPageRoute
  '/listings': typeof ListingsRoute
  '/login-form': typeof LoginFormRoute
  '/prompt-editing': typeof PromptEditingRoute
  '/property-management': typeof PropertyManagementRoute
  '/protected': typeof ProtectedRoute
  '/register-form': typeof RegisterFormRoute
  '/restore-password-step1': typeof RestorePasswordStep1Route
  '/statistics': typeof StatisticsRoute
  '/user-dashboard': typeof UserDashboardRoute
  '/user-management': typeof UserManagementRoute
  '/user-profile-page': typeof UserProfilePageRoute
  '/password-reset/$email-token': typeof PasswordResetEmailTokenRoute
  '/verify-email/$email-token': typeof VerifyEmailEmailTokenRoute
  '/confirm-change/$token/$type': typeof ConfirmChangeTokenTypeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cancel-payment': typeof CancelPaymentRoute
  '/cancel-subscription': typeof CancelSubscriptionRoute
  '/complete-payment': typeof CompletePaymentRoute
  '/complete-subscription': typeof CompleteSubscriptionRoute
  '/listing-form-to-add-page': typeof ListingFormToAddPageRoute
  '/listing-page': typeof ListingPageRoute
  '/listings': typeof ListingsRoute
  '/login-form': typeof LoginFormRoute
  '/prompt-editing': typeof PromptEditingRoute
  '/property-management': typeof PropertyManagementRoute
  '/protected': typeof ProtectedRoute
  '/register-form': typeof RegisterFormRoute
  '/restore-password-step1': typeof RestorePasswordStep1Route
  '/statistics': typeof StatisticsRoute
  '/user-dashboard': typeof UserDashboardRoute
  '/user-management': typeof UserManagementRoute
  '/user-profile-page': typeof UserProfilePageRoute
  '/password-reset/$email-token': typeof PasswordResetEmailTokenRoute
  '/verify-email/$email-token': typeof VerifyEmailEmailTokenRoute
  '/confirm-change/$token/$type': typeof ConfirmChangeTokenTypeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cancel-payment'
    | '/cancel-subscription'
    | '/complete-payment'
    | '/complete-subscription'
    | '/listing-form-to-add-page'
    | '/listing-page'
    | '/listings'
    | '/login-form'
    | '/prompt-editing'
    | '/property-management'
    | '/protected'
    | '/register-form'
    | '/restore-password-step1'
    | '/statistics'
    | '/user-dashboard'
    | '/user-management'
    | '/user-profile-page'
    | '/password-reset/$email-token'
    | '/verify-email/$email-token'
    | '/confirm-change/$token/$type'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cancel-payment'
    | '/cancel-subscription'
    | '/complete-payment'
    | '/complete-subscription'
    | '/listing-form-to-add-page'
    | '/listing-page'
    | '/listings'
    | '/login-form'
    | '/prompt-editing'
    | '/property-management'
    | '/protected'
    | '/register-form'
    | '/restore-password-step1'
    | '/statistics'
    | '/user-dashboard'
    | '/user-management'
    | '/user-profile-page'
    | '/password-reset/$email-token'
    | '/verify-email/$email-token'
    | '/confirm-change/$token/$type'
  id:
    | '__root__'
    | '/'
    | '/cancel-payment'
    | '/cancel-subscription'
    | '/complete-payment'
    | '/complete-subscription'
    | '/listing-form-to-add-page'
    | '/listing-page'
    | '/listings'
    | '/login-form'
    | '/prompt-editing'
    | '/property-management'
    | '/protected'
    | '/register-form'
    | '/restore-password-step1'
    | '/statistics'
    | '/user-dashboard'
    | '/user-management'
    | '/user-profile-page'
    | '/password-reset/$email-token'
    | '/verify-email/$email-token'
    | '/confirm-change/$token/$type'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CancelPaymentRoute: typeof CancelPaymentRoute
  CancelSubscriptionRoute: typeof CancelSubscriptionRoute
  CompletePaymentRoute: typeof CompletePaymentRoute
  CompleteSubscriptionRoute: typeof CompleteSubscriptionRoute
  ListingFormToAddPageRoute: typeof ListingFormToAddPageRoute
  ListingPageRoute: typeof ListingPageRoute
  ListingsRoute: typeof ListingsRoute
  LoginFormRoute: typeof LoginFormRoute
  PromptEditingRoute: typeof PromptEditingRoute
  PropertyManagementRoute: typeof PropertyManagementRoute
  ProtectedRoute: typeof ProtectedRoute
  RegisterFormRoute: typeof RegisterFormRoute
  RestorePasswordStep1Route: typeof RestorePasswordStep1Route
  StatisticsRoute: typeof StatisticsRoute
  UserDashboardRoute: typeof UserDashboardRoute
  UserManagementRoute: typeof UserManagementRoute
  UserProfilePageRoute: typeof UserProfilePageRoute
  PasswordResetEmailTokenRoute: typeof PasswordResetEmailTokenRoute
  VerifyEmailEmailTokenRoute: typeof VerifyEmailEmailTokenRoute
  ConfirmChangeTokenTypeRoute: typeof ConfirmChangeTokenTypeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CancelPaymentRoute: CancelPaymentRoute,
  CancelSubscriptionRoute: CancelSubscriptionRoute,
  CompletePaymentRoute: CompletePaymentRoute,
  CompleteSubscriptionRoute: CompleteSubscriptionRoute,
  ListingFormToAddPageRoute: ListingFormToAddPageRoute,
  ListingPageRoute: ListingPageRoute,
  ListingsRoute: ListingsRoute,
  LoginFormRoute: LoginFormRoute,
  PromptEditingRoute: PromptEditingRoute,
  PropertyManagementRoute: PropertyManagementRoute,
  ProtectedRoute: ProtectedRoute,
  RegisterFormRoute: RegisterFormRoute,
  RestorePasswordStep1Route: RestorePasswordStep1Route,
  StatisticsRoute: StatisticsRoute,
  UserDashboardRoute: UserDashboardRoute,
  UserManagementRoute: UserManagementRoute,
  UserProfilePageRoute: UserProfilePageRoute,
  PasswordResetEmailTokenRoute: PasswordResetEmailTokenRoute,
  VerifyEmailEmailTokenRoute: VerifyEmailEmailTokenRoute,
  ConfirmChangeTokenTypeRoute: ConfirmChangeTokenTypeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cancel-payment",
        "/cancel-subscription",
        "/complete-payment",
        "/complete-subscription",
        "/listing-form-to-add-page",
        "/listing-page",
        "/listings",
        "/login-form",
        "/prompt-editing",
        "/property-management",
        "/protected",
        "/register-form",
        "/restore-password-step1",
        "/statistics",
        "/user-dashboard",
        "/user-management",
        "/user-profile-page",
        "/password-reset/$email-token",
        "/verify-email/$email-token",
        "/confirm-change/$token/$type"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cancel-payment": {
      "filePath": "cancel-payment.tsx"
    },
    "/cancel-subscription": {
      "filePath": "cancel-subscription.tsx"
    },
    "/complete-payment": {
      "filePath": "complete-payment.tsx"
    },
    "/complete-subscription": {
      "filePath": "complete-subscription.tsx"
    },
    "/listing-form-to-add-page": {
      "filePath": "listing-form-to-add-page.tsx"
    },
    "/listing-page": {
      "filePath": "listing-page.tsx"
    },
    "/listings": {
      "filePath": "listings.tsx"
    },
    "/login-form": {
      "filePath": "login-form.tsx"
    },
    "/prompt-editing": {
      "filePath": "prompt-editing.tsx"
    },
    "/property-management": {
      "filePath": "property-management.tsx"
    },
    "/protected": {
      "filePath": "protected.tsx"
    },
    "/register-form": {
      "filePath": "register-form.tsx"
    },
    "/restore-password-step1": {
      "filePath": "restore-password-step1.tsx"
    },
    "/statistics": {
      "filePath": "statistics.tsx"
    },
    "/user-dashboard": {
      "filePath": "user-dashboard.tsx"
    },
    "/user-management": {
      "filePath": "user-management.tsx"
    },
    "/user-profile-page": {
      "filePath": "user-profile-page.tsx"
    },
    "/password-reset/$email-token": {
      "filePath": "password-reset/$email-token.tsx"
    },
    "/verify-email/$email-token": {
      "filePath": "verify-email/$email-token.tsx"
    },
    "/confirm-change/$token/$type": {
      "filePath": "confirm-change/$token.$type.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
